{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2021-11-25T18:03:28.668Z",
    "end": "2021-11-25T18:03:35.608Z",
    "duration": 6940,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2d20981b-44f2-4f44-bdf5-291b5fb0ee1f",
      "title": "",
      "fullFile": "cypress/integration/backend-testing.spec.js",
      "file": "cypress/integration/backend-testing.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8c7c7cc2-02eb-46a0-8f13-99f13ee755c5",
          "title": "Backend-testing of Hotel Application",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[TC 01] View all rooms",
              "fullTitle": "Backend-testing of Hotel Application [TC 01] View all rooms",
              "timedOut": null,
              "duration": 635,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.requestAllAndAssert(ROOMS, data.rooms);",
              "err": {},
              "uuid": "185547b4-5e52-4bf5-bd99-4a2908d569fa",
              "parentUUID": "8c7c7cc2-02eb-46a0-8f13-99f13ee755c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[TC 02] View all clients",
              "fullTitle": "Backend-testing of Hotel Application [TC 02] View all clients",
              "timedOut": null,
              "duration": 566,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.requestAllAndAssert(CLIENTS, data.clients);",
              "err": {},
              "uuid": "aab53f78-afb6-41fe-b477-ee397261a75d",
              "parentUUID": "8c7c7cc2-02eb-46a0-8f13-99f13ee755c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[TC 03] View all bills",
              "fullTitle": "Backend-testing of Hotel Application [TC 03] View all bills",
              "timedOut": null,
              "duration": 570,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.requestAllAndAssert(BILLS, data.bills);",
              "err": {},
              "uuid": "1f92c218-b1d2-4190-a120-098f76867ba2",
              "parentUUID": "8c7c7cc2-02eb-46a0-8f13-99f13ee755c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[TC 04] View all reservations",
              "fullTitle": "Backend-testing of Hotel Application [TC 04] View all reservations",
              "timedOut": null,
              "duration": 578,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.requestAllAndAssert(RESERVATIONS, data.reservations);",
              "err": {},
              "uuid": "b26bf536-540d-4293-a15d-166f5b027b37",
              "parentUUID": "8c7c7cc2-02eb-46a0-8f13-99f13ee755c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[TC 05] Add a feature to a room",
              "fullTitle": "Backend-testing of Hotel Application [TC 05] Add a feature to a room",
              "timedOut": null,
              "duration": 1165,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Object to be updated\nlet room = data.rooms[0]; // New values\nlet updatedRoom = {\n  \"id\": 1,\n  \"created\": \"2020-01-03T12:00:00.000Z\",\n  \"category\": \"double\",\n  \"floor\": 1,\n  \"number\": 101,\n  \"available\": true,\n  \"price\": 1500,\n  \"features\": [\"balcony\", \"ensuite\", \"sea_view\"]\n}; // Update the room\napi.requestUpdate(ROOMS, room.id, updatedRoom); // Reverse update to not interfere with other test cases\napi.requestUpdate(ROOMS, room.id, room);\ncy.log('Room changed back to original');",
              "err": {},
              "uuid": "7417d5d3-e32b-44a2-8901-7e12f98af6a2",
              "parentUUID": "8c7c7cc2-02eb-46a0-8f13-99f13ee755c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[TC 06] Create a room",
              "fullTitle": "Backend-testing of Hotel Application [TC 06] Create a room",
              "timedOut": null,
              "duration": 1144,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let newRoom = {\n  \"category\": \"single\",\n  \"floor\": 2,\n  \"number\": 201,\n  \"available\": true,\n  \"price\": 1500,\n  \"features\": [\"balcony\", \"ensuite\", \"sea_view\"]\n};\napi.requestCreate('room', newRoom);\napi.requestDeleteLastObject('room');",
              "err": {},
              "uuid": "762c6e2b-e04e-4648-bf9d-ec51de2fb680",
              "parentUUID": "8c7c7cc2-02eb-46a0-8f13-99f13ee755c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[TC 07] Update a reservation",
              "fullTitle": "Backend-testing of Hotel Application [TC 07] Update a reservation",
              "timedOut": null,
              "duration": 1133,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Object to be updated\nlet reservation = data.reservations[0]; // New values\nlet newEndDate = reservation.end.slice(0, -2) + '05';\nlet updatedReservation = {\n  \"id\": reservation.id,\n  \"created\": reservation.created,\n  \"start\": reservation.start,\n  \"end\": newEndDate,\n  \"client\": reservation.client,\n  \"room\": reservation.room,\n  \"bill\": reservation.bill\n}; // Update reservation\napi.requestUpdate(RESERVATIONS, reservation.id, updatedReservation); // Reverse update to not interfere with other test cases\napi.requestUpdate(RESERVATIONS, reservation.id, reservation);\ncy.log('Reservation changed back to original');",
              "err": {},
              "uuid": "771b5a47-1674-4d9d-bbb5-f518d2bc19e6",
              "parentUUID": "8c7c7cc2-02eb-46a0-8f13-99f13ee755c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[TC 08] Delete a reservation",
              "fullTitle": "Backend-testing of Hotel Application [TC 08] Delete a reservation",
              "timedOut": null,
              "duration": 1073,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Create a reservation to be safely deleted\ncy.authenticateSession().then(response => {\n  api.request('POST', '/reservation/new');\n});\napi.requestDeleteLastObject('reservation');",
              "err": {},
              "uuid": "6cc0eae1-b092-4272-b9af-99e3f3e96737",
              "parentUUID": "8c7c7cc2-02eb-46a0-8f13-99f13ee755c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "185547b4-5e52-4bf5-bd99-4a2908d569fa",
            "aab53f78-afb6-41fe-b477-ee397261a75d",
            "1f92c218-b1d2-4190-a120-098f76867ba2",
            "b26bf536-540d-4293-a15d-166f5b027b37",
            "7417d5d3-e32b-44a2-8901-7e12f98af6a2",
            "762c6e2b-e04e-4648-bf9d-ec51de2fb680",
            "771b5a47-1674-4d9d-bbb5-f518d2bc19e6",
            "6cc0eae1-b092-4272-b9af-99e3f3e96737"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6864,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}